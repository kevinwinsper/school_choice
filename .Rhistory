#school rank GCSE scores ####
i <- check[1]
pathandfile <- paste(pathname, exp, i, "/", file_basename, i, ".csv",  sep="")
dat <- read.csv(pathandfile, header = T, skip = skip)
final.yr.dat <- dat[dat$Tick == 100,]
GCSE <- final.yr.dat$GCSE.score
GCSE.dat <- sort(GCSE)
for(j in 2:length(check))
{
i <- check[j]
pathandfile <- paste(pathname, exp, i, "/", file_basename, i, ".csv",  sep="")
dat <- read.csv(pathandfile, header = T, skip = skip)
final.yr.dat <- dat[dat$Tick == 100,]
GCSE <- final.yr.dat$GCSE.score
GCSE <- sort(GCSE)
GCSE.dat <- cbind(GCSE.dat, GCSE)
}
meanGCSE <- apply(GCSE.dat,1,mean)
sdGCSE <-  apply(GCSE.dat,1,sd)
barplot(meanGCSE, ylim = c(0,80))
error.bar(seq(0.5, 10.5, 1.2), meanGCSE, upper = sdGCSE * 1.96, length = 0)
check.rands <- function(check, rands)
{
result <- sum(rands > check)
result
}
rands <- rnorm(900, mean = 50, sd = 20)
pcounts <- sapply(meanGCSE, check.rands, rands)
pcounts
rands <- rnorm(900, mean = 50, sd = 20)
pcounts <- sapply(seq(10,100,10), check.rands, rands)
pcounts
rm(list=ls())
library(RColorBrewer)
library(gregmisc)
library(reshape)
#error bar function for plotting ####
error.bar <- function(x, y, upper, lower=upper, length,...)
{
if(length(x) != length(y) | length(y) !=length(lower) | length(lower) != length(upper))
stop("vectors must be same length")
arrows(x,y+upper, x, y-lower, angle=90, code=3, length=length, ...)
}
# run variables ####
#pathname <- "J:/SchoolChoice/"
pathname <- ""
exp <- "Experiment"
file_basename <- "Schools_SummaryData_Exp"
pset <- 25
skip <- 24
if(pset == 1) check <- seq(from = 2, to = 48, by = 2) #set1
#if(pset == 2) check <- seq(from = 1, to = 9, by = 2) #set2
if(pset == 2) check <- seq(from = 1, to = 49, by = 2) #set2
if(pset == 3) check <- seq(from = 577, to = 625, by = 2) #set3
if(pset == 4) check <- seq(from = 576, to = 624, by = 2) #set4
if(pset == 5) check <- seq(from = 100, to = 148, by = 2) #set5
if(pset == 6) check <- seq(from = 101, to = 149, by = 2) #set6
if(pset == 7) check <- seq(from = 627, to = 675, by = 2) #set7
if(pset == 8) check <- seq(from = 626, to = 674, by = 2) #set8
if(pset == 9) check <- seq(from = 200, to = 224, by = 1) #set9
if(pset == 10) check <- seq(from = 225, to = 249, by = 1) #set10
if(pset == 11) check <- seq(from = 250, to = 274, by = 1) #set11
if(pset == 12) check <- seq(from = 275, to = 300, by = 1) #set12
if(pset == 13) check <- seq(from = 300, to = 324, by = 1) #set13
if(pset == 14) check <- seq(from = 325, to = 349, by = 1) #set14
if(pset == 15) check <- seq(from = 350, to = 374, by = 1) #set15
if(pset == 16) check <- seq(from = 375, to = 399, by = 1) #set16
if(pset == 17) check <- seq(from = 400, to = 424, by = 1) #set17
if(pset == 18) check <- seq(from = 425, to = 449, by = 1) #set18
#if(pset == 19) check <- seq(from = 450, to = 474, by = 1) #same as Set1
if(pset == 19) check <- seq(from = 475, to = 499, by = 1) #set19
if(pset == 20) check <- seq(from = 500, to = 524, by = 1) #set20
if(pset == 21) check <- seq(from = 525, to = 549, by = 1) #set21
if(pset == 22) check <- seq(from = 550, to = 574, by = 1) #set22
if(pset == 23) check <- seq(from = 675, to = 699, by = 1) #set23
if(pset == 24) check <- seq(from = 700, to = 724, by = 1) #set24
if(pset == 25) check <- seq(from = 725, to = 749, by = 1) #set24
cols <- rep("grey", length(check))
#cols <- brewer.pal(length(check), "Set3")
#GCSE max and min ####
i <- check[1]
pathandfile <- paste(pathname, exp, i, "/", file_basename, i, ".csv",  sep="")
dat <- read.csv(pathandfile, header = T, skip = skip)
dat.melt <- melt(dat, id.vars = c("Tick", "School_id"), measure.vars = "GCSE.score")
max.GCSE <- as.data.frame(cast(dat.melt, Tick ~ variable, max))
min.GCSE <- as.data.frame(cast(dat.melt, Tick ~ variable, min))
png(paste(pathname, "set", pset, "_GCSE-MaxMin.png", sep = ""), width = 1000, height = 1000)
par(cex = 2, lwd = 3.5)
plot(max.GCSE$GCSE.score, type = "l", col = cols[1], main = paste("set", pset, sep = ""))
lines(min.GCSE$GCSE.score, type = "l", lty = "dashed", col = cols[1], main = paste("set", pset, sep = ""))
for(j in 2:length(check))
{
i <- check[j]
pathandfile <- paste(pathname, exp, i, "/", file_basename, i, ".csv",  sep="")
dat <- read.csv(pathandfile, header = T, skip = skip)
dat.melt <- melt(dat, id.vars = c("Tick", "School_id"), measure.vars = "GCSE.score")
max.GCSE <- as.data.frame(cast(dat.melt, Tick ~ variable, max))
min.GCSE <- as.data.frame(cast(dat.melt, Tick ~ variable, min))
lines(max.GCSE$GCSE.score, type = "l",  col = cols[j], main = paste("set", pset, sep = ""))
lines(min.GCSE$GCSE.score, type = "l", lty = "dashed", col = cols[j], main = paste("set", pset, sep = ""))
}
#legend("topleft", legend = as.character(check), lty = rep(1, length(check)), col = cols )
dev.off()
# App.Ratio max and min ####
i <- check[1]
pathandfile <- paste(pathname, exp, i, "/", file_basename, i, ".csv",  sep="")
dat <- read.csv(pathandfile, header = T, skip = skip)
dat.melt <- melt(dat, id.vars = c("Tick", "School_id"), measure.vars = "App.ratio")
max.AppRatio <- as.data.frame(cast(dat.melt, Tick ~ variable, max))
min.AppRatio<- as.data.frame(cast(dat.melt, Tick ~ variable, min))
png(paste(pathname, "set", pset, "_AppRatio-MaxMin.png", sep = ""), width = 1000, height = 1000)
par(cex = 2, lwd = 3.5)
plot(max.AppRatio$App.ratio, type = "l", col = cols[1], main = paste("set", pset, sep = ""))
lines(min.AppRatio$App.ratio, type = "l", lty = "dashed", col = cols[1], main = paste("set", pset, sep = ""))
for(j in 2:length(check))
{
i <- check[j]
pathandfile <- paste(pathname, exp, i, "/", file_basename, i, ".csv",  sep="")
dat <- read.csv(pathandfile, header = T, skip = skip)
dat.melt <- melt(dat, id.vars = c("Tick", "School_id"), measure.vars = "App.ratio")
max.AppRatio <- as.data.frame(cast(dat.melt, Tick ~ variable, max))
min.AppRatio <- as.data.frame(cast(dat.melt, Tick ~ variable, min))
lines(max.AppRatio$App.ratio, type = "l",  col = cols[j], main = paste("set", pset, sep = ""))
lines(min.AppRatio$App.ratio, type = "l", lty = "dashed", col = cols[j], main = paste("set", pset, sep = ""))
}
#legend("topleft", legend = as.character(check), lty = rep(1, length(check)), col = cols )
dev.off()
#y7 distance ####
i <- check[1]
pathandfile <- paste(pathname, exp, i, "/", file_basename, i, ".csv",  sep="")
dat <- read.csv(pathandfile, header = T, skip = skip)
dat.melt <- melt(dat, id.vars = c("Tick", "School_id"), measure.vars = "max.distance_y7")
max.Disty7 <- as.data.frame(cast(dat.melt, Tick ~ variable, max))
min.Disty7 <- as.data.frame(cast(dat.melt, Tick ~ variable, min))
png(paste(pathname, "set", pset, "_MaxDistance-MaxMin.png", sep = ""), width = 1000, height = 1000)
par(cex = 2, lwd = 3.5)
plot(max.Disty7$max.distance_y7, type = "l", col = cols[1], main = paste("set", pset, sep = ""))
lines(min.Disty7$max.distance_y7, type = "l", lty = "dashed", col = cols[1], main = paste("set", pset, sep = ""))
for(j in 2:length(check))
{
i <- check[j]
pathandfile <- paste(pathname, exp, i, "/", file_basename, i, ".csv",  sep="")
dat <- read.csv(pathandfile, header = T, skip = skip)
dat.melt <- melt(dat, id.vars = c("Tick", "School_id"), measure.vars = "max.distance_y7")
max.Disty7 <- as.data.frame(cast(dat.melt, Tick ~ variable, max))
min.Disty7 <- as.data.frame(cast(dat.melt, Tick ~ variable, min))
lines(max.Disty7$max.distance_y7, type = "l",  col = cols[j], main = paste("set", pset, sep = ""))
lines(min.Disty7$max.distance_y7, type = "l", lty = "dashed", col = cols[j], main = paste("set", pset, sep = ""))
}
#legend("topleft", legend = as.character(check), lty = rep(1, length(check)), col = cols )
dev.off()
i <- check[1]
pathandfile <- paste(pathname, exp, i, "/", file_basename, i, ".csv",  sep="")
dat <- read.csv(pathandfile, header = T, skip = skip)
dat.school0 <- dat[dat$School_id == 0,]
dat.school1 <- dat[dat$School_id == 1,]
dat.school2 <- dat[dat$School_id == 2,]
dat.school3 <- dat[dat$School_id == 3,]
dat.school4 <- dat[dat$School_id == 4,]
dat.school5 <- dat[dat$School_id == 5,]
dat.school6 <- dat[dat$School_id == 6,]
dat.school7 <- dat[dat$School_id == 7,]
dat.school8 <- dat[dat$School_id == 8,]
cols <- brewer.pal(9, "Set3")
png(paste(pathname, "set", pset, "_SchoolsMaxDistances.png", sep = ""), width = 1000, height = 1000)
par(cex = 2, lwd = 3.5)
plot(dat.school0$Tick, dat.school0$max.distance_y7, type = "l", col = cols[1], ylim = c(0,75), main = paste("set", pset, sep = ""))
lines(dat.school1$Tick, dat.school1$max.distance_y7, col = cols[2])
lines(dat.school2$Tick, dat.school2$max.distance_y7, col = cols[3])
lines(dat.school3$Tick, dat.school3$max.distance_y7, col = cols[4])
lines(dat.school4$Tick, dat.school4$max.distance_y7, col = cols[5])
lines(dat.school5$Tick, dat.school5$max.distance_y7, col = cols[6])
lines(dat.school6$Tick, dat.school6$max.distance_y7, col = cols[7])
lines(dat.school7$Tick, dat.school7$max.distance_y7, col = cols[8])
lines(dat.school8$Tick, dat.school8$max.distance_y7, col = cols[9])
dev.off()
for(j in 2:length(check))
{
i <- check[j]
pathandfile <- paste(pathname, exp, i, "/", file_basename, i, ".csv",  sep="")
dat <- read.csv(pathandfile, header = T, skip = skip)
dat.school0 <- dat[dat$School_id == 0,]
dat.school1 <- dat[dat$School_id == 1,]
dat.school2 <- dat[dat$School_id == 2,]
dat.school3 <- dat[dat$School_id == 3,]
dat.school4 <- dat[dat$School_id == 4,]
dat.school5 <- dat[dat$School_id == 5,]
dat.school6 <- dat[dat$School_id == 6,]
dat.school7 <- dat[dat$School_id == 7,]
dat.school8 <- dat[dat$School_id == 8,]
lines(dat.school0$Tick, dat.school0$max.distance_y7, col = cols[1])
lines(dat.school1$Tick, dat.school1$max.distance_y7, col = cols[2])
lines(dat.school2$Tick, dat.school2$max.distance_y7, col = cols[3])
lines(dat.school3$Tick, dat.school3$max.distance_y7, col = cols[4])
lines(dat.school4$Tick, dat.school4$max.distance_y7, col = cols[5])
lines(dat.school5$Tick, dat.school5$max.distance_y7, col = cols[6])
lines(dat.school6$Tick, dat.school6$max.distance_y7, col = cols[7])
lines(dat.school7$Tick, dat.school7$max.distance_y7, col = cols[8])
lines(dat.school8$Tick, dat.school8$max.distance_y7, col = cols[9])
}
#legend("topleft", legend = as.character(check), lty = rep(1, length(check)), col = cols )
dev.off()
#school rank GCSE scores ####
i <- check[1]
pathandfile <- paste(pathname, exp, i, "/", file_basename, i, ".csv",  sep="")
dat <- read.csv(pathandfile, header = T, skip = skip)
final.yr.dat <- dat[dat$Tick == 100,]
GCSE <- final.yr.dat$GCSE.score
GCSE.dat <- sort(GCSE)
for(j in 2:length(check))
{
i <- check[j]
pathandfile <- paste(pathname, exp, i, "/", file_basename, i, ".csv",  sep="")
dat <- read.csv(pathandfile, header = T, skip = skip)
final.yr.dat <- dat[dat$Tick == 100,]
GCSE <- final.yr.dat$GCSE.score
GCSE <- sort(GCSE)
GCSE.dat <- cbind(GCSE.dat, GCSE)
}
meanGCSE <- apply(GCSE.dat,1,mean)
sdGCSE <-  apply(GCSE.dat,1,sd)
barplot(meanGCSE, ylim = c(0,80))
error.bar(seq(0.5, 10.5, 1.2), meanGCSE, upper = sdGCSE * 1.96, length = 0)
check.rands <- function(check, rands)
{
result <- sum(rands > check)
result
}
rands <- rnorm(900, mean = 50, sd = 20)
pcounts <- sapply(meanGCSE, check.rands, rands)
pcounts
rands <- rnorm(900, mean = 50, sd = 20)
pcounts <- sapply(seq(10,100,10), check.rands, rands)
pcounts
rm(list=ls())
library(RColorBrewer)
library(gregmisc)
library(reshape)
#error bar function for plotting ####
error.bar <- function(x, y, upper, lower=upper, length,...)
{
if(length(x) != length(y) | length(y) !=length(lower) | length(lower) != length(upper))
stop("vectors must be same length")
arrows(x,y+upper, x, y-lower, angle=90, code=3, length=length, ...)
}
# run variables ####
#pathname <- "J:/SchoolChoice/"
pathname <- ""
exp <- "Experiment"
file_basename <- "Schools_SummaryData_Exp"
pset <- 25
skip <- 24
if(pset == 1) check <- seq(from = 2, to = 48, by = 2) #set1
#if(pset == 2) check <- seq(from = 1, to = 9, by = 2) #set2
if(pset == 2) check <- seq(from = 1, to = 49, by = 2) #set2
if(pset == 3) check <- seq(from = 577, to = 625, by = 2) #set3
if(pset == 4) check <- seq(from = 576, to = 624, by = 2) #set4
if(pset == 5) check <- seq(from = 100, to = 148, by = 2) #set5
if(pset == 6) check <- seq(from = 101, to = 149, by = 2) #set6
if(pset == 7) check <- seq(from = 627, to = 675, by = 2) #set7
if(pset == 8) check <- seq(from = 626, to = 674, by = 2) #set8
if(pset == 9) check <- seq(from = 200, to = 224, by = 1) #set9
if(pset == 10) check <- seq(from = 225, to = 249, by = 1) #set10
if(pset == 11) check <- seq(from = 250, to = 274, by = 1) #set11
if(pset == 12) check <- seq(from = 275, to = 300, by = 1) #set12
if(pset == 13) check <- seq(from = 300, to = 324, by = 1) #set13
if(pset == 14) check <- seq(from = 325, to = 349, by = 1) #set14
if(pset == 15) check <- seq(from = 350, to = 374, by = 1) #set15
if(pset == 16) check <- seq(from = 375, to = 399, by = 1) #set16
if(pset == 17) check <- seq(from = 400, to = 424, by = 1) #set17
if(pset == 18) check <- seq(from = 425, to = 449, by = 1) #set18
#if(pset == 19) check <- seq(from = 450, to = 474, by = 1) #same as Set1
if(pset == 19) check <- seq(from = 475, to = 499, by = 1) #set19
if(pset == 20) check <- seq(from = 500, to = 524, by = 1) #set20
if(pset == 21) check <- seq(from = 525, to = 549, by = 1) #set21
if(pset == 22) check <- seq(from = 550, to = 574, by = 1) #set22
if(pset == 23) check <- seq(from = 675, to = 699, by = 1) #set23
if(pset == 24) check <- seq(from = 700, to = 724, by = 1) #set24
if(pset == 25) check <- seq(from = 725, to = 749, by = 1) #set24
cols <- rep("grey", length(check))
#cols <- brewer.pal(length(check), "Set3")
#GCSE max and min ####
i <- check[1]
pathandfile <- paste(pathname, exp, i, "/", file_basename, i, ".csv",  sep="")
dat <- read.csv(pathandfile, header = T, skip = skip)
View(error.bar)
rm(list=ls())
library(RColorBrewer)
library(reshape)
library(gregmisc)
#error bar function for plotting
error.bar <- function(x, y, upper, lower=upper, length,...)
{
if(length(x) != length(y) | length(y) !=length(lower) | length(lower) != length(upper))
stop("vectors must be same length")
arrows(x,y+upper, x, y-lower, angle=90, code=3, length=length, ...)
}
#pathname <- "C:/Users/James/Dropbox/Research/OngoingProjects/SchoolChoice/"
#pathname <- "J:/SchoolChoice/"
pathname <- "~/"
exp <- "Experiment"
#win.pathname <- "C:\\Users\\James\\Dropbox\\Research\\OngoingProjects\\SchoolChoice\\"
win.pathname <- "J:\\SchoolChoice\\"
pset <- 1
for(pset in 1:1)
{
#if(pset == 1) check <- seq(from = 0, to = 8, by = 2) #set1
if(pset == 1) check <- seq(from = 0, to = 48, by = 2) #set1
if(pset == 2) check <- seq(from = 1, to = 49, by = 2) #set2
if(pset == 3) check <- seq(from = 50, to = 98, by = 2) #set3
if(pset == 4) check <- seq(from = 51, to = 99, by = 2) #set4
if(pset == 5) check <- seq(from = 100, to = 148, by = 2) #set5
if(pset == 6) check <- seq(from = 101, to = 149, by = 2) #set6
if(pset == 7) check <- seq(from = 150, to = 198, by = 2) #set7
if(pset == 8) check <- seq(from = 151, to = 199, by = 2) #set8
if(pset == 9) check <- seq(from = 200, to = 224, by = 1) #set9
if(pset == 10) check <- seq(from = 225, to = 249, by = 1) #set10
i <- check[1]
#shell(paste("\"C:\\Program Files\\WinRAR\\WinRAR.exe\"", "E -ibck -o+", paste(win.pathname, exp, i, "\\Parents_Data.rar", sep =""), paste(win.pathname, exp, i, sep ="")), wait = T)
#dat <- read.csv(paste(win.pathname, exp, i, "\\Parents_Data_Exp", i, ".csv", sep =""), skip = 1, header = T)
dat <- read.csv(paste(pathname,"Parents_Data_Exp", i, ".csv", sep =""), skip = 1, header = T)
#shell(paste("DEL /Q ", paste(win.pathname, exp, i, "\\Parents_Data_Exp", i, ".csv", sep ="")))
dat15 <- dat[dat$child.age == 15,]
dat15 <- dat15[dat15$Tick > 20,]
dat.final <- dat15[dat15$Tick = 99,]
attainment.delta <- dat15$child.attainment - dat15$aspiration
dat15 <- cbind(dat15, attainment.delta)
aspiration.rounded <- floor(dat15$aspiration / 20)
dat15 <- cbind(dat15, aspiration.rounded)
dat15.attAsp0 <- dat15[dat15$aspiration.rounded == 0,]
dat15.attAsp1 <- dat15[dat15$aspiration.rounded == 1,]
dat15.attAsp2 <- dat15[dat15$aspiration.rounded == 2,]
dat15.attAsp3 <- dat15[dat15$aspiration.rounded == 3,]
dat15.attAsp4 <- dat15[dat15$aspiration.rounded == 4,]
dat15.success <- dat15[dat15$success.rank1 == 1,]
dat15.successAsp0 <- dat15.success[dat15.success$aspiration.rounded == 0,]
dat15.successAsp1 <- dat15.success[dat15.success$aspiration.rounded == 1,]
dat15.successAsp2 <- dat15.success[dat15.success$aspiration.rounded == 2,]
dat15.successAsp3 <- dat15.success[dat15.success$aspiration.rounded == 3,]
dat15.successAsp4 <- dat15.success[dat15.success$aspiration.rounded == 4,]
# dat15.sD0_lowAtt <- dat15.success[dat15.success$distance.rounded == 0 & dat15.success$attainment.delta < -10,]
attBreaks <- c(-50, -40, -30, -20, -10, 0, 10, 20, 30, 40, 50)
attAsp0.counts <- hist(dat15.attAsp0$attainment.delta, attBreaks, plot = F)$counts
attAsp1.counts <- hist(dat15.attAsp1$attainment.delta, attBreaks, plot = F)$counts
attAsp2.counts <- hist(dat15.attAsp2$attainment.delta, attBreaks, plot = F)$counts
attAsp3.counts <- hist(dat15.attAsp3$attainment.delta, attBreaks, plot = F)$counts
attAsp4.counts <- hist(dat15.attAsp4$attainment.delta, attBreaks, plot = F)$counts
successAsp0.counts <- hist(dat15.successAsp0$attainment.delta, attBreaks, plot = F)$counts
successAsp1.counts <- hist(dat15.successAsp1$attainment.delta, attBreaks, plot = F)$counts
successAsp2.counts <- hist(dat15.successAsp2$attainment.delta, attBreaks, plot = F)$counts
successAsp3.counts <- hist(dat15.successAsp3$attainment.delta, attBreaks, plot = F)$counts
successAsp4.counts <- hist(dat15.successAsp4$attainment.delta, attBreaks, plot = F)$counts
rm(dat)
for(j in 2:length(check))
{
i <- check[j]
shell(paste("\"C:\\Program Files\\WinRAR\\WinRAR.exe\"", "E -ibck -o+", paste(win.pathname, exp, i, "\\Parents_Data.rar", sep =""), paste(win.pathname, exp, i, sep ="")), wait = T)
dat <- read.csv(paste(win.pathname, exp, i, "\\Parents_Data_Exp", i, ".csv", sep =""), skip = 1, header = T)
shell(paste("DEL /Q ", paste(win.pathname, exp, i, "\\Parents_Data_Exp", i, ".csv", sep ="")))
dat15 <- dat[dat$child.age == 15,]
dat15 <- dat15[dat15$Tick > 20,]
attainment.delta <- dat15$child.attainment - dat15$aspiration
dat15 <- cbind(dat15, attainment.delta)
aspiration.rounded <- floor(dat15$aspiration / 20)
dat15 <- cbind(dat15, aspiration.rounded)
dat15.attAsp0 <- dat15[dat15$aspiration.rounded == 0,]
dat15.attAsp1 <- dat15[dat15$aspiration.rounded == 1,]
dat15.attAsp2 <- dat15[dat15$aspiration.rounded == 2,]
dat15.attAsp3 <- dat15[dat15$aspiration.rounded == 3,]
dat15.attAsp4 <- dat15[dat15$aspiration.rounded == 4,]
dat15.success <- dat15[dat15$success.rank1 == 1,]
dat15.successAsp0 <- dat15.success[dat15.success$aspiration.rounded == 0,]
dat15.successAsp1 <- dat15.success[dat15.success$aspiration.rounded == 1,]
dat15.successAsp2 <- dat15.success[dat15.success$aspiration.rounded == 2,]
dat15.successAsp3 <- dat15.success[dat15.success$aspiration.rounded == 3,]
dat15.successAsp4 <- dat15.success[dat15.success$aspiration.rounded == 4,]
# dat15.sD0_lowAtt <- dat15.success[dat15.success$distance.rounded == 0 & dat15.success$attainment.delta < -10,]
attBreaks <- c(-50, -40, -30, -20, -10, 0, 10, 20, 30, 40, 50)
attAsp0.counts <- cbind(attAsp0.counts, hist(dat15.attAsp0$attainment.delta, attBreaks, plot = F)$counts)
attAsp1.counts <- cbind(attAsp1.counts, hist(dat15.attAsp1$attainment.delta, attBreaks, plot = F)$counts)
attAsp2.counts <- cbind(attAsp2.counts, hist(dat15.attAsp2$attainment.delta, attBreaks, plot = F)$counts)
attAsp3.counts <- cbind(attAsp3.counts, hist(dat15.attAsp3$attainment.delta, attBreaks, plot = F)$counts)
attAsp4.counts <- cbind(attAsp4.counts, hist(dat15.attAsp4$attainment.delta, attBreaks, plot = F)$counts)
successAsp0.counts <- cbind(successAsp0.counts, hist(dat15.successAsp0$attainment.delta, attBreaks, plot = F)$counts)
successAsp1.counts <- cbind(successAsp1.counts, hist(dat15.successAsp1$attainment.delta, attBreaks, plot = F)$counts)
successAsp2.counts <- cbind(successAsp2.counts, hist(dat15.successAsp2$attainment.delta, attBreaks, plot = F)$counts)
successAsp3.counts <- cbind(successAsp3.counts, hist(dat15.successAsp3$attainment.delta, attBreaks, plot = F)$counts)
successAsp4.counts <- cbind(successAsp4.counts, hist(dat15.successAsp4$attainment.delta, attBreaks, plot = F)$counts)
rm(dat)
}
attAsp0.means <- apply(attAsp0.counts, 1, mean, na.rm = T)
attAsp1.means <- apply(attAsp1.counts, 1, mean, na.rm = T)
attAsp2.means <- apply(attAsp2.counts, 1, mean, na.rm = T)
attAsp3.means <- apply(attAsp3.counts, 1, mean, na.rm = T)
attAsp4.means <- apply(attAsp4.counts, 1, mean, na.rm = T)
attAsp0.upper <- apply(attAsp0.counts, 1, quantile, probs = 0.975, na.rm = T)
attAsp1.upper <- apply(attAsp1.counts, 1, quantile, probs = 0.975, na.rm = T)
attAsp2.upper <- apply(attAsp2.counts, 1, quantile, probs = 0.975, na.rm = T)
attAsp3.upper <- apply(attAsp3.counts, 1, quantile, probs = 0.975, na.rm = T)
attAsp4.upper <- apply(attAsp4.counts, 1, quantile, probs = 0.975, na.rm = T)
attAsp0.lower <- apply(attAsp0.counts, 1, quantile, probs = 0.025, na.rm = T)
attAsp1.lower <- apply(attAsp1.counts, 1, quantile, probs = 0.025, na.rm = T)
attAsp2.lower <- apply(attAsp2.counts, 1, quantile, probs = 0.025, na.rm = T)
attAsp3.lower <- apply(attAsp3.counts, 1, quantile, probs = 0.025, na.rm = T)
attAsp4.lower <- apply(attAsp4.counts, 1, quantile, probs = 0.025, na.rm = T)
successAsp0.means <- apply(successAsp0.counts, 1, mean, na.rm = T)
successAsp1.means <- apply(successAsp1.counts, 1, mean, na.rm = T)
successAsp2.means <- apply(successAsp2.counts, 1, mean, na.rm = T)
successAsp3.means <- apply(successAsp3.counts, 1, mean, na.rm = T)
successAsp4.means <- apply(successAsp4.counts, 1, mean, na.rm = T)
dists <- seq(0, 5, 1)
barcols <- brewer.pal(5, "Oranges")
asp.dat <- rbind(attAsp0.means, attAsp1.means, attAsp2.means, attAsp3.means, attAsp4.means)
success.dat <- rbind(successAsp0.means, successAsp1.means, successAsp2.means, successAsp3.means, successAsp4.means)
max.count <- max(asp.dat)
max.countR <- max(pretty(c(0, max.count)))
png(paste(pathname, "ParameterSet", pset, "_AttainmentVsAspirationVsSuccess_Bars.png", sep = ""), width = 2000, height = 2000)
par(cex = 3, lwd = 2)
barplot(asp.dat, col = barcols, beside = T, axes = F, ylim = c(0, max.countR), ylab = "Counts", xlab = "Attainment Change")
barplot(asp.dat, col = "black", density = 10, angle = 45, add = T, beside = T, axes = F)
barplot(success.dat, col = barcols, add = T, beside = T, axes = F)
error.bar(seq(1.5, 55.5, 6), attAsp0.means, upper = (attAsp0.upper - attAsp0.means), lower = (attAsp0.means - attAsp0.lower), length = 0)
error.bar(seq(2.5, 56.5, 6), attAsp1.means, upper = (attAsp1.upper - attAsp1.means), lower = (attAsp1.means - attAsp1.lower), length = 0)
error.bar(seq(3.5, 57.5, 6), attAsp2.means, upper = (attAsp2.upper - attAsp2.means), lower = (attAsp2.means - attAsp2.lower), length = 0)
error.bar(seq(4.5, 58.5, 6), attAsp3.means, upper = (attAsp3.upper - attAsp3.means), lower = (attAsp3.means - attAsp3.lower), length = 0)
error.bar(seq(5.5, 59.5, 6), attAsp4.means, upper = (attAsp4.upper - attAsp4.means), lower = (attAsp4.means - attAsp4.lower), length = 0)
axis(2, at = pretty(c(0, max.count)))
axis(1, at = seq(3.5, 60.5, 6), labels = c("-50--40", "-40--30", "-30--20", "-20--10", "-10-0", "0-10", "10-20", "20-30", "30-40", "40-50"), tick = F)
legend("topright", title = "Aspiration", c("0-20", "20-40", "40-60", "60-80", "80-100"), fill = barcols)
text(54, 10000, "Hatching = Fail")
dev.off()
pdf(paste(pathname, "ParameterSet", pset, "_AttainmentVsAspirationVsSuccess_Bars.pdf", sep = ""), width = 10, height = 8)
par(cex = 1, lwd = 1)
barplot(asp.dat, col = barcols, beside = T, axes = F, ylim = c(0, max.countR), ylab = "Counts", xlab = "Attainment Change")
barplot(asp.dat, col = "black", density = 20, angle = 45, add = T, beside = T, axes = F)
barplot(success.dat, col = barcols, add = T, beside = T, axes = F)
error.bar(seq(1.5, 55.5, 6), attAsp0.means, upper = (attAsp0.upper - attAsp0.means), lower = (attAsp0.means - attAsp0.lower), length = 0)
error.bar(seq(2.5, 56.5, 6), attAsp1.means, upper = (attAsp1.upper - attAsp1.means), lower = (attAsp1.means - attAsp1.lower), length = 0)
error.bar(seq(3.5, 57.5, 6), attAsp2.means, upper = (attAsp2.upper - attAsp2.means), lower = (attAsp2.means - attAsp2.lower), length = 0)
error.bar(seq(4.5, 58.5, 6), attAsp3.means, upper = (attAsp3.upper - attAsp3.means), lower = (attAsp3.means - attAsp3.lower), length = 0)
error.bar(seq(5.5, 59.5, 6), attAsp4.means, upper = (attAsp4.upper - attAsp4.means), lower = (attAsp4.means - attAsp4.lower), length = 0)
axis(2, at = pretty(c(0, max.count)))
axis(1, at = seq(3.5, 60.5, 6), labels = c("-50--40", "-40--30", "-30--20", "-20--10", "-10-0", "0-10", "10-20", "20-30", "30-40", "40-50"), tick = F)
legend("topright", title = "Aspiration", c("0-20", "20-40", "40-60", "60-80", "80-100"), fill = barcols)
text(54, 10000, "Hatching = Fail")
dev.off()
}
rm(list=ls())
library(RColorBrewer)
library(reshape)
library(gregmisc)
#error bar function for plotting
error.bar <- function(x, y, upper, lower=upper, length,...)
{
if(length(x) != length(y) | length(y) !=length(lower) | length(lower) != length(upper))
stop("vectors must be same length")
arrows(x,y+upper, x, y-lower, angle=90, code=3, length=length, ...)
}
#pathname <- "C:/Users/James/Dropbox/Research/OngoingProjects/SchoolChoice/"
#pathname <- "J:/SchoolChoice/"
pathname <- "~/"
exp <- "Experiment"
#win.pathname <- "C:\\Users\\James\\Dropbox\\Research\\OngoingProjects\\SchoolChoice\\"
win.pathname <- "J:\\SchoolChoice\\"
pset <- 1
#for(pset in 1:1)
#{
#if(pset == 1) check <- seq(from = 0, to = 8, by = 2) #set1
if(pset == 1) check <- seq(from = 0, to = 48, by = 2) #set1
i <- check[1]
#shell(paste("\"C:\\Program Files\\WinRAR\\WinRAR.exe\"", "E -ibck -o+", paste(win.pathname, exp, i, "\\Parents_Data.rar", sep =""), paste(win.pathname, exp, i, sep ="")), wait = T)
#dat <- read.csv(paste(win.pathname, exp, i, "\\Parents_Data_Exp", i, ".csv", sep =""), skip = 1, header = T)
dat <- read.csv(paste(pathname,"Parents_Data_Exp", i, ".csv", sep =""), skip = 1, header = T)
rm(list=ls())
library(RColorBrewer)
library(reshape)
library(gregmisc)
#error bar function for plotting
error.bar <- function(x, y, upper, lower=upper, length,...)
{
if(length(x) != length(y) | length(y) !=length(lower) | length(lower) != length(upper))
stop("vectors must be same length")
arrows(x,y+upper, x, y-lower, angle=90, code=3, length=length, ...)
}
#pathname <- "C:/Users/James/Dropbox/Research/OngoingProjects/SchoolChoice/"
#pathname <- "J:/SchoolChoice/"
pathname <- "~/"
exp <- "Experiment"
#win.pathname <- "C:\\Users\\James\\Dropbox\\Research\\OngoingProjects\\SchoolChoice\\"
#win.pathname <- "J:\\SchoolChoice\\"
pset <- 1
#for(pset in 1:1)
#{
#if(pset == 1) check <- seq(from = 0, to = 8, by = 2) #set1
if(pset == 1) check <- seq(from = 0, to = 48, by = 2) #set1
i <- check[1]
#shell(paste("\"C:\\Program Files\\WinRAR\\WinRAR.exe\"", "E -ibck -o+", paste(win.pathname, exp, i, "\\Parents_Data.rar", sep =""), paste(win.pathname, exp, i, sep ="")), wait = T)
#dat <- read.csv(paste(win.pathname, exp, i, "\\Parents_Data_Exp", i, ".csv", sep =""), skip = 1, header = T)
dat <- read.csv(paste(pathname,"Parents_Data_Exp", i, ".csv", sep =""), skip = 1, header = T)
dat15 <- dat[dat$child.age == 15,]
dat15 <- dat15[dat15$Tick > 20,]
dat.final <- dat15[dat15$Tick = 99,]
#shell(paste("\"C:\\Program Files\\WinRAR\\WinRAR.exe\"", "E -ibck -o+", paste(win.pathname, exp, i, "\\Parents_Data.rar", sep =""), paste(win.pathname, exp, i, sep ="")), wait = T)
#dat <- read.csv(paste(win.pathname, exp, i, "\\Parents_Data_Exp", i, ".csv", sep =""), skip = 1, header = T)
dat <- read.csv(paste(pathname,"Parents_Data_Exp", i, ".csv", sep =""), skip = 1, header = T)
#pathname <- "C:/Users/James/Dropbox/Research/OngoingProjects/SchoolChoice/"
#pathname <- "J:/SchoolChoice/"
pathname <- "~/Documents/GitHub/school_choice"
exp <- "Experiment"
#shell(paste("\"C:\\Program Files\\WinRAR\\WinRAR.exe\"", "E -ibck -o+", paste(win.pathname, exp, i, "\\Parents_Data.rar", sep =""), paste(win.pathname, exp, i, sep ="")), wait = T)
#dat <- read.csv(paste(win.pathname, exp, i, "\\Parents_Data_Exp", i, ".csv", sep =""), skip = 1, header = T)
dat <- read.csv(paste(pathname,"Parents_Data_Exp", i, ".csv", sep =""), skip = 1, header = T)
